{"remainingRequest":"C:\\Users\\Galib\\Weather_app\\weather_app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Galib\\Weather_app\\weather_app\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Galib\\Weather_app\\weather_app\\src\\App.vue","mtime":1613454543797},{"path":"C:\\Users\\Galib\\Weather_app\\weather_app\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\Weather_app\\weather_app\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\Weather_app\\weather_app\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\Weather_app\\weather_app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\Weather_app\\weather_app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiogewogIG1hcmdpbjogMDsKICBwYWRkaW5nOiAwOwogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7Cn0KCmJvZHkgewogIGZvbnQtZmFtaWx5OiAnbW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7Cn0KCi5hcHAgewogIGJhY2tncm91bmQ6ICNGM0YzRjM7CiAgY29sb3I6ICMxNTIwMkI7CiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGVhc2UtaW4tb3V0Owp9CgouZGFyayB7CiAgYmFja2dyb3VuZDogIzE3MjYzMzsKICBjb2xvcjogI0U4RThFODsKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div id=\"app\" :class=\"mode\">\n      <Header :mode=\"mode\" @toggle=\"toggle\" />\n      <div id=\"main\">\n      <router-view></router-view>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from '@/components/Header'\n\nexport default {\n  name: 'app',\n  data () {\n    return {\n      mode: 'light'\n    }\n  },\n  components: {\n    Header\n  },\n  created () {\n    window.addEventListener('keyup', this.keyPress)\n  },\n  methods: {\n    keyPress (e) {\n      if (e.key === 't') {\n        this.toggle()\n      }\n    },\n    toggle () {\n      if (this.mode === \"dark\") {\n        this.mode = \"light\"\n      } else {\n        this.mode = \"dark\"\n      }\n    }\n  }\n}\n</script>\n\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: 'montserrat', sans-serif;\n}\n\n.app {\n  background: #F3F3F3;\n  color: #15202B;\n  transition: background 0.3s ease-in-out;\n}\n\n.dark {\n  background: #172633;\n  color: #E8E8E8;\n}\n</style>"]}]}