{"remainingRequest":"C:\\Users\\Galib\\portfolio\\Portfolio\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Galib\\portfolio\\Portfolio\\src\\components\\Me.vue?vue&type=template&id=7cb08bfe&","dependencies":[{"path":"C:\\Users\\Galib\\portfolio\\Portfolio\\src\\components\\Me.vue","mtime":1598358681162},{"path":"C:\\Users\\Galib\\portfolio\\Portfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\portfolio\\Portfolio\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\portfolio\\Portfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\portfolio\\Portfolio\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}