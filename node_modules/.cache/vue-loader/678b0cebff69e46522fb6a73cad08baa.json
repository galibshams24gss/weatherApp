{"remainingRequest":"C:\\Users\\Galib\\go_one\\events-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Galib\\go_one\\events-app\\src\\components\\Events.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\Galib\\go_one\\events-app\\src\\components\\Events.vue","mtime":1598196547535},{"path":"C:\\Users\\Galib\\go_one\\events-app\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\go_one\\events-app\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\go_one\\events-app\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\go_one\\events-app\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\go_one\\events-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\go_one\\events-app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2RhdGFob2xkZXIgewogIGJvcmRlci1yYWRpdXM6IDIwcHg7Cn0K"},{"version":3,"sources":["Events.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqNA;AACA;AACA","file":"Events.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container>\n    <v-card color=\"#385F73\" dark id=\"dataholder\">\n    <v-card-title>\n      Events\n      <v-spacer></v-spacer>\n      <v-text-field\n        v-model=\"search\"\n        append-icon=\"mdi-magnify\"\n        label=\"Search\"\n        single-line\n        hide-details\n      ></v-text-field>\n    </v-card-title>\n\n    <v-data-table\n    :headers=\"headers\"\n    :items=\"eventdData\"\n    :search=\"search\"\n    class=\"elevation-1\"\n  >\n    <template v-slot:top>\n        <v-dialog v-model=\"dialog\" max-width=\"700px\">\n          <v-card\n          :loading=\"loading\"\n          class=\"mx-auto my-12\"\n          max-width=\"700\"\n          id=\"dataholder\"\n        >\n    <v-img\n      height=\"250\"\n      v-bind:src=\"viewedItem.Image\"\n    ></v-img>\n\n    <v-container>\n      <v-row dense>\n        <v-col cols=\"12\">\n          <v-card\n            color=\"#006064\"\n            dark\n          >\n            <v-card-title class=\"headline\">{{viewedItem.Title}}</v-card-title>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\">\n          <v-card\n            color=\"#03A9F4\"\n            dark\n          >\n            <v-card-title class=\"headline\">Time</v-card-title>\n            <v-card-subtitle>{{viewedItem.Time}}</v-card-subtitle>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\">\n          <v-card\n            color=\"#385F73\"\n            dark\n          >\n            <v-card-title class=\"headline\">Location</v-card-title>\n            <v-card-subtitle>{{viewedItem.City}}, {{viewedItem.State}}, {{viewedItem.Country}}</v-card-subtitle>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\">\n          <v-card\n            color=\"#AEEA00\"\n            dark\n          >\n            <v-card-title class=\"headline\">Available Seats</v-card-title>\n\n            <v-card-subtitle>\n              <div class=\"align-center\">\n                <v-chip color=\"#006064\">{{viewedItem.SeatOne}}</v-chip>\n                &nbsp;\n                <v-chip color=\"#03A9F4\">{{viewedItem.SeatTwo}}</v-chip>\n              </div>\n            </v-card-subtitle>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\">\n          <v-card\n            color=\"pink\"\n            dark\n          >\n            <v-card-actions>\n              <v-btn text @click=\"close\">Close</v-btn>\n            </v-card-actions>\n            </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-card>\n        </v-dialog>\n    </template>\n    <template v-slot:item.action=\"{ item }\">\n       <div class=\"text-center\">\n        <v-btn rounded color=\"lime accent-4\" dark @click=\"viewItem(item)\">Event Details</v-btn>\n      </div>\n    </template>\n\n    <template v-slot:no-results>\n        <v-alert :value=\"true\" color=\"error\" icon=\"search\">\n          Your search for \"{{ search }}\" found no results.\n        </v-alert>\n      </template>\n  </v-data-table>\n    </v-card>\n  </v-container>\n</template>\n\n<script>\n  export default {\n    name: 'Events',\n\n    data: () => ({\n      search: '',\n      dialog: false,\n      headers: [\n        {\n          text: 'Title',\n          align: 'center',\n          sortable: false,\n          value: 'Title',\n        },\n        { text: 'Time', align: 'center', value: 'Time' },\n        { text: 'Action', align: 'center', value: 'action', sortable: false },\n      ],\n      viewedIndex: -1,\n      viewedItem: {\n        Title: '',\n        Time: '',\n        Image: '',\n        City: '',\n        State: '',\n        Country: '',\n        SeatOne: '',\n        SeatTwo: ''\n      },\n      defaultItem: {\n        Title: '',\n        Time: '',\n        City: '',\n        State: '',\n        Country: '',\n        SeatOne: '',\n        SeatTwo: ''\n      },\n      loading: false\n    }),\n\n    computed: {\n      events(){\n        return this.$store.getters['datastore/events'];\n      },\n\n      eventdData(){\n          const dataArr = [];\n          const dataProc = this.events;\n          dataProc.forEach(function(obj) {\n            const title = obj.Title;\n            const time = obj.Time;\n            const image = obj.Image;\n            const city = obj.Location.City;\n            const state = obj.Location.State;\n            const country = obj.Location.Country;\n            const seats = obj.AvailableSeats;\n            let seatOne = \"NA\";\n            let seatTwo = \"NA\";\n            if(typeof seats === 'undefined' || seats === null){\n                seatOne = \"NA\";\n                seatTwo = \"NA\";\n              } else{\n                seats.forEach(function(obj2){\n                seatOne = obj2.id;\n                seatTwo = obj2.id;\n            });\n          }\n            dataArr.push({Title: title, Time: time, Image: image, City: city, State: state, Country: country, SeatOne: seatOne, SeatTwo: seatTwo})\n          });\n          return dataArr;\n      }\n    },\n\n    watch: {\n      dialog (val) {\n        val || this.close()\n      }\n    },\n\n    mounted(){\n      this.events;\n    },\n\n    created () {},\n\n    methods: {\n      viewItem (item) {\n        this.viewedIndex = this.eventdData.indexOf(item)\n        this.viewedItem = Object.assign({}, item)\n        this.dialog = true\n      },\n\n      close () {\n        this.dialog = false\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  #dataholder {\n    border-radius: 20px;\n  }\n</style>\n"]}]}